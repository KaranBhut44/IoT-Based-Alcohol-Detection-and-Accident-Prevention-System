import smbus
import time
import RPi.GPIO as GPIO
import serial
import time,sys
from curses import ascii
start=time.time()
PERIOD_OF_TIME=30
try:
    GPIO.setmode(GPIO.BCM)
    SERIAL_PORT="/dev/ttyAMA0"
    ser=serial.Serial(SERIAL_PORT,baudrate=9600,timeout=5)
    GPIO.setup(20,GPIO.OUT)
    GPIO.output(20,GPIO.LOW)
    GPIO.setup(21,GPIO.OUT)
    GPIO.output(21,GPIO.LOW)
    GPIO.setup(17,GPIO.OUT)
    GPIO.output(17,GPIO.LOW)
    address=0X48
    A0=0X40
    s_data=0
    bus=smbus.SMBus(1)
    count=0
    while time.time()<=start+PERIOD_OF_TIME:
        bus.write_byte(address,A0)
        value=bus.read_byte(address)
        s_data=value*3.3/255
        print("AOUT:%1.3f"%(s_data))
        if (s_data>2.5) and (count==0):
            GPIO.output(21,GPIO.HIGH)
            GPIO.output(20,GPIO.HIGH)
            GPIO.output(17,GPIO.HIGH)
            ser.write(b"AT+CMGF=1\r\n")
            time.sleep(1)
            phone_no="+91**********"
            response=ser.read(15)
            print(response)
            ser.write(b"AT+CGNSPWR=1\r\n")
            time.sleep(1)
            ser.write(b"AT+CGNSSEQ=RMC\r\n")
            time.sleep(1)
            ser.flush()
            ser.write(b"AT+CGNSINF\r\n")
            time.sleep(1)
            response=ser.read(150)
            print(response)
            my_list=response.decode("utf-8").split(",")
            print("Lattitude:%s"%(my_list[3]))
            print("Longitude:%s"%(my_list[4]))
            map_string="https://maps.google.com/maps?q=loc:"+my_list[3]+","+my_list[4]
            ser.write(str.encode('AT+CMGS="%s"\r\n'%phone_no))
            time.sleep(1)
            ser.write(b"DRIVER IS DRUNK!!! Click below link to see the current location ")
            ser.write(str.encode(map_string))
            time.sleep(1)
            ser.write(str.encode(ascii.ctrl('z')))
            time.sleep(1)
            ser.write(b"\n")
            time.sleep(1)
            respo=ser.read(150)
            print(respo)
            count=count+1
        elif s_data<2.4:
            GPIO.output(21,GPIO.LOW)
            GPIO.output(20,GPIO.LOW)
            GPIO.output(17,GPIO.LOW)
            count=0
    print("Opening Drowsiness Detection")        
    import drowsiness
finally:
    GPIO.cleanup()
